@using AdService.Application.Dictionaries;
@using AdService.Domain.Entities;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.IsInRole(RolesDict.Administrator))
        {
            <a asp-controller="AdminPanel" asp-action="Users" class="nav-link text-white">Admin Panel</a>
        }
        @*<li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>*@
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="" asp-controller="Client" asp-action="Profile">My Profile</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-white">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
