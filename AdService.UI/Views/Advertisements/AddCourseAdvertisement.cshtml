@using AdService.Application.Advertisements.CourseAdvertisements.Queries.GetAddCourseAdvert;


@model AddCourseAdvertVm

@{
    ViewData["Title"] = "Add Course Advertisement";
}

@section Styles{
    <partial name="Styles/_DateTimeStyles" />
    <partial name="Styles/_SelectStyles" />
}

<div>

    <partial name="_ProfileNav" />

    <div class="container">
        
                <!-- Account details card-->
                <div class="card mb-4 card-primary card-border-top">
                    <div class="card-header">Course Details</div>
                        <div class="card-body">
                            @using (Html.BeginForm("AddCourseAdvertisement", "Advertisements", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {

                                @Html.AntiForgeryToken()
                                
                                @for (int i = 0; i < Model.AvailableCategories.Count(); i++)
                                {
                                    @Html.HiddenFor(model => Model.AvailableCategories[i].Id)
                                    @Html.HiddenFor(model => Model.AvailableCategories[i].Name)
                                }


                                <!-- Form Group - Title -->
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.CourseAdvert.Title)
                                    @Html.TextBoxFor(x => x.CourseAdvert.Title, new { @class = "form-control", @placeholder = "Enter your course's Title"})
                                    @Html.ValidationMessageFor(x => x.CourseAdvert.Title)
                                </div>

                                <!-- Form Row - Category Dropdown -->
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.CourseAdvert.CategoryId)
                                    <div class="select2-blue">
                                        @Html.DropDownList("CourseAdvert.CategoryId", @Model.AvailableCategories.Select(
                                            x => new SelectListItem(x.Name, x.Id.ToString())),
                                        null, htmlAttributes: new { @class="form-control select2-CategoryId", style="width: 100%;"})

                                        @Html.ValidationMessageFor(x => x.CourseAdvert.CategoryId)
                                    </div>
                                </div>


                                <!-- Form Row - Description-->
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.CourseAdvert.Description)
                                    @Html.TextAreaFor(x => x.CourseAdvert.Description, new { @class = "form-control", @placeholder = "Describe your course", @rows="5"})   
                                    @Html.ValidationMessageFor(x => x.CourseAdvert.Description)
                                </div>

                                <!-- Form Row  - Start and End dates -->
                                <div class="row gx-3 mb-3">
                                    <!-- Start date -->
                                    <div class="col-md-6">
                                        @Html.LabelFor(x => x.CourseAdvert.StartDate)
                                        <div class="input-group date" id="dtpStartDate" data-target-input="nearest">
                                            <input asp-for="CourseAdvert.StartDate" type="text" class="form-control datetimepicker-input" data-target="#dtpStartDate" value="@Model.CourseAdvert.StartDate.ToString("dd-MM-yyyy")" />
                                            <div class="input-group-append" data-target="#dtpStartDate" data-toggle="datetimepicker">
                                                <div class="input-group-text calendar">
                                                    <i class="fa fa-calendar-days"></i>
                                                </div>
                                            </div>
                                        </div>

                                        @Html.ValidationMessageFor(x => x.CourseAdvert.StartDate)
                                    </div>
                                    <!-- End date -->
                                    <div class="col-md-6">
                                        @Html.LabelFor(x => x.CourseAdvert.EndDate)
                                        <div class="input-group date" id="dtpEndDate" data-target-input="nearest">
                                            <input asp-for="CourseAdvert.EndDate" type="text" class="form-control datetimepicker-input" data-target="#dtpEndDate" />
                                            <div class="input-group-append" data-target="#dtpEndDate" data-toggle="datetimepicker">
                                                <div class="input-group-text calendar">
                                                    <i class="fa fa-calendar-days"></i>
                                                </div>
                                            </div>
                                        </div>

                                        @Html.ValidationMessageFor(x => x.CourseAdvert.EndDate)
                                    </div>

                                </div>

                                <!-- Form Row - Location and Image-->
                                <div class="row gx-3 mb-3">
                                
                                    <!-- Location -->
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.CourseAdvert.Location)
                                            @Html.TextBoxFor(x => x.CourseAdvert.Location, new { @class = "form-control", @placeholder = "Enter your course's Location"})
                                            @Html.ValidationMessageFor(x => x.CourseAdvert.Location)
                                        </div>
                                    </div>
                                    
                                    <!-- Image -->
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.CourseAdvert.ImageFile)
                                            <input asp-for="CourseAdvert.ImageFile" class="form-control" type="file" accept=".jpg, .jpeg, .png">
                                        </div>
                                    </div>


                                </div>
                                
                                <!-- Form Group - CoursePrice -->
                                <div class="mb-5">
                                        @Html.LabelFor(x => x.CourseAdvert.CoursePrice)
                                        @Html.TextBoxFor(x => x.CourseAdvert.CoursePrice, "{0:#.#}", new { @class = "form-control", @placeholder = "Enter price for your course"})   
                                        @Html.ValidationMessageFor(x => x.CourseAdvert.CoursePrice)
                                </div>
                                
                                <!-- Form Group - Price -->
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.CourseAdvert.Price)
                                    @Html.TextBoxFor(x => x.CourseAdvert.Price, new { @id = "CalculatedPrice", @class = "form-control", @readonly = "readonly"})
                                    @Html.ValidationMessageFor(x => x.CourseAdvert.Price)
                                </div>

                                
                                @*<div>
                                    <label for="price">Price: $</label>
                                    <span id="price">0</span>
                                </div>*@

                                <!-- Save changes button-->
                                <button class="btn btn-primary" type="submit">Pay for advertisement</button>
                            }
                
                        
                    </div>
                </div>
        

    </div>
</div>


@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    <partial name="Scripts/_DateTimeScripts" />
    <partial name="Scripts/_SelectScripts" />


    <script>

        $(document).ready(function() {

            var today = new Date();
            today.setHours(0, 0, 0, 0); // Resets time to midnight

            $('.select2-CategoryId').select2({
                theme: 'bootstrap-5'
            });

            $('#dtpStartDate').datetimepicker({
                format: 'L',
                useCurrent: true, // Automatically use today's date
                minDate: today // Set minimum date to today
            })
            
            $('#dtpEndDate').datetimepicker({
                format: 'L',
                useCurrent: false, // Prevent auto-setting the current date
                minDate: moment(today).add(1, 'days') // Tomorrow's date as the minimum
            })

            // Update EndDate minimum date whenever StartDate changes
            $('#dtpStartDate').on('change.datetimepicker', function (e) {
                var minDateForEnd = e.date.add(1, 'days'); // Set the minimum date for EndDate as one day after StartDate
                $('#dtpEndDate').datetimepicker('minDate', minDateForEnd);
                var currentEndDate = $('#dtpEndDate').datetimepicker('date');
                if (currentEndDate && currentEndDate < minDateForEnd) {
                    $('#dtpEndDate').datetimepicker('date', minDateForEnd);
                }
            });

            var pricePerDay = 100; // Price per day

                // Function to calculate days and update price
            function updatePrice() {
                var startDate = $('#dtpStartDate').datetimepicker('date');
                var endDate = $('#dtpEndDate').datetimepicker('date');
                var price = 0;

                if (startDate && endDate && startDate <= endDate) {
                    var diff = endDate.diff(startDate, 'days');
                    price = diff * pricePerDay;
                }

                // Update the readonly text input for displaying calculated price
                $('#CalculatedPrice').val(price);
            }

            // Event listener for date changes
            $('#dtpStartDate, #dtpEndDate').on('change.datetimepicker', function (e) {
                updatePrice();
            });

            updatePrice();
        });

    </script>

}



