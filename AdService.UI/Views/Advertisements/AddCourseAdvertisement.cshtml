@using AdService.Application.Advertisements.CourseAdvertisements.Commands;

@model AddCourseAdvertisementCommand

@{
    ViewData["Title"] = "My Profile";
}

@section Styles{
    <partial name="Styles/_DateTimeStyles" />
}

<div>

    <partial name="_ProfileNav" />

    <div class="container">
        
                <!-- Account details card-->
                <div class="card mb-4 card-primary card-border-top">
                    <div class="card-header">Account Details</div>
                        <div class="card-body">
                            @using (Html.BeginForm("AddCourseAdvertisement", "Advertisements"))
                            {

                                @Html.AntiForgeryToken()
                                

                                <!-- Form Group (username)-->
                                <div class="mb-3">
                                    @*<label class="small mb-1" for="inputUsername">Email</label>*@
                                    @Html.LabelFor(x => x.Title)
                                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Enter your course's Title"})
                                </div>


                                <!-- Form Row-->
                                <div class="mb-3">
                                    <!-- Form Group (first name)-->  
                                    @Html.LabelFor(x => x.Description)
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Describe your course", @rows="5"})   
                                    @Html.ValidationMessageFor(x => x.Description)
                                </div>

                                <!-- Form Row  - Start and End dates -->
                                <div class="row gx-3 mb-3">
                                    <!-- Start date -->
                                    <div class="col-md-6">
                                        @Html.LabelFor(x => x.StartDate)
                                        <div class="input-group date" id="dtpStartDate" data-target-input="nearest">
                                            <input asp-for="StartDate" type="text" class="form-control datetimepicker-input" data-target="#dtpStartDate" value="@Model.StartDate.ToString("dd-MM-yyyy")" />
                                            <div class="input-group-append" data-target="#dtpStartDate" data-toggle="datetimepicker">
                                                <div class="input-group-text calendar">
                                                    <i class="fa fa-calendar-days"></i>
                                                </div>
                                            </div>
                                        </div>

                                        @Html.ValidationMessageFor(x => x.StartDate)
                                    </div>
                                    <!-- End date -->
                                    <div class="col-md-6">
                                        @Html.LabelFor(x => x.EndDate)
                                        <div class="input-group date" id="dtpEndDate" data-target-input="nearest">
                                            <input asp-for="EndDate" type="text" class="form-control datetimepicker-input" data-target="#dtpEndDate" />
                                            <div class="input-group-append" data-target="#dtpEndDate" data-toggle="datetimepicker">
                                                <div class="input-group-text calendar">
                                                    <i class="fa fa-calendar-days"></i>
                                                </div>
                                            </div>
                                        </div>

                                        @Html.ValidationMessageFor(x => x.EndDate)
                                    </div>

                                </div>

                                
                                <!-- Form Group - CoursePrice -->
                                <div class="mb-3">
                                        @Html.LabelFor(x => x.Price)
                                        @Html.TextBoxFor(x => x.Price, new { @class = "form-control", @placeholder = "Enter price for your course", @value = @Model.Price})   
                                        @Html.ValidationMessageFor(x => x.Price)
                                </div>
                                
                                <!-- Form Group - Price -->
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.Price)
                                    @Html.TextBoxFor(x => x.Price, new { @id = "CalculatedPrice", @class = "form-control", @readonly = "readonly"})
                                    @Html.ValidationMessageFor(x => x.Price)
                                </div>

                                
                                @*<div>
                                    <label for="price">Price: $</label>
                                    <span id="price">0</span>
                                </div>*@

                                <!-- Save changes button-->
                                <button class="btn btn-primary" type="submit">Pay for advertisement</button>
                            }
                
                        
                    </div>
                </div>
        

    </div>
</div>


@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    <partial name="Scripts/_DateTimeScripts" />


    <script>

        $(document).ready(function() {

            $('#dtpStartDate').datetimepicker({
                format: 'L'
            })
            
            $('#dtpEndDate').datetimepicker({
                format: 'L'
            })

            var pricePerDay = 100; // Price per day

                // Function to calculate days and update price
            function updatePrice() {
                var startDate = $('#dtpStartDate').datetimepicker('date');
                var endDate = $('#dtpEndDate').datetimepicker('date');
                var price = 0;

                if (startDate && endDate && startDate <= endDate) {
                    var diff = endDate.diff(startDate, 'days');
                    price = diff * pricePerDay;
                }

                // Update the readonly text input for displaying calculated price
                $('#CalculatedPrice').val(price);
            }

            // Event listener for date changes
            $('#dtpStartDate, #dtpEndDate').on('change.datetimepicker', function (e) {
                updatePrice();
            });

            updatePrice();
        });

    </script>

}



