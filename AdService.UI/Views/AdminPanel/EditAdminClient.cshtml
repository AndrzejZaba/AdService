@using AdService.Application.Clients.Queries.GetEditAdminClient;
@using AdService.Application.Dictionaries;

@model EditAdminClientVm

@{
    Layout = $"/Views/Shared/_LayoutAdminPanel.cshtml";
    ViewData["Title"] = "Edytowanie danych klienta";
}

@section Styles {
<partial name="Styles/_SelectStyles" />
}

<div class="card card-primary card-border-top">

    @using (Html.BeginForm("EditAdminClient", "AdminPanel"))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Client.Id)

        @for (int i = 0; i < Model.AvailableRoles.Count(); i++)
        {
            @Html.HiddenFor(x => x.AvailableRoles[i].Id)
            @Html.HiddenFor(x => x.AvailableRoles[i].Name)
        }

        <div class="card-body">

            <div class="form-group">
                @Html.LabelFor(x => x.Client.Email)
                @Html.TextBoxFor(x => x.Client.Email, new { @class = "form-control"})
                @Html.ValidationMessageFor(x => x.Client.Email)
            </div>

            <div class="row gx-3 mb-3 form-group">
            <!-- Form Group (first name)-->
                <div class="col-md-6 ">
                    @Html.LabelFor(x => x.Client.FirstName)
                    @Html.TextBoxFor(x => x.Client.FirstName, new { @class = "form-control", @placeholder = "Enter user's first name", @value = @Model.Client.FirstName})
                    @Html.ValidationMessageFor(x => x.Client.FirstName)
                </div>
                <!-- Form Group (last name)-->
                <div class="col-md-6 ">
                    @Html.LabelFor(x => x.Client.LastName)
                    @Html.TextBoxFor(x => x.Client.LastName, new { @class = "form-control", @placeholder = "Enter user's last name", @value = @Model.Client.LastName})
                    @Html.ValidationMessageFor(x => x.Client.LastName)
                </div>
            </div>

            <div class="mb-5">
                @Html.LabelFor(x => x.Client.PhoneNumber)
                @Html.TextBoxFor(x => x.Client.PhoneNumber, new { @class = "form-control", @placeholder = "Enter user's phone number", @value = @Model.Client.PhoneNumber})   
                @Html.ValidationMessageFor(x => x.Client.PhoneNumber)
            </div>

            <hr />

            <div class="form-check mb-3">
                @Html.CheckBoxFor(x => x.Client.IsBusinessAccount, new{ @class = "form-check-input"})
                @Html.LabelFor(x => x.Client.IsBusinessAccount, new{ @class = "form-check-label font-weight-bold"})
            </div>
                                
            <!-- Form Row-->
            <div class="row gx-3 mb-3">
                <div class="form-group" id="divCompanyName" style="display: none;">
                    @Html.LabelFor(x => x.Client.CompanyName)
                    @Html.TextBoxFor(x => x.Client.CompanyName, new { @class = "form-control", placeholder="Enter user's company name", @value = @Model.Client.CompanyName })
                    @Html.ValidationMessageFor(x => x.Client.CompanyName)
                </div>
                                
                <div class="form-group" id="divNipNumber" style="display: none;">
                    @Html.LabelFor(x => x.Client.NipNumber)
                    @Html.TextBoxFor(x => x.Client.NipNumber, new { @class = "form-control", placeholder="Enter user's company NIP ", @value = @Model.Client.NipNumber})
                    @Html.ValidationMessageFor(x => x.Client.NipNumber)
                </div>
            </div>

            <!-- Logo -->
                                
            <div class="mb-5" id="divLogo" style="display: none;">
                @Html.LabelFor(x => x.Client.LogoFile)
                <input asp-for="Client.LogoFile" class="form-control" type="file" accept=".jpg, .jpeg, .png">
            </div>
                                
            <hr />

            <!-- Form Group -->
            <div class="mb-3">
                @Html.LabelFor(x => x.Client.Country)
                @Html.TextBoxFor(x => x.Client.Country, new { @class = "form-control", @placeholder = "Enter user's country", @value = @Model.Client.Country})   
                @Html.ValidationMessageFor(x => x.Client.Country)
            </div>

            <!-- Form Row -->
            <div class="row gx-3 mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Client.City)
                    @Html.TextBoxFor(x => x.Client.City, new { @class = "form-control", @placeholder = "Enter user's city", @value = @Model.Client.City})   
                    @Html.ValidationMessageFor(x => x.Client.City)
                </div>
                
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Client.ZipCode)
                    @Html.TextBoxFor(x => x.Client.ZipCode, new { @class = "form-control", @placeholder = "Enter user's zip code", @value = @Model.Client.ZipCode, id = "ZipCode"})
                    @Html.ValidationMessageFor(x => x.Client.ZipCode)
                </div>
            </div>
                                
            <!-- Form Row-->
            <div class="row gx-3 mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Client.Street)
                    @Html.TextBoxFor(x => x.Client.Street, new { @class = "form-control", @placeholder = "Enter user's street", @value = @Model.Client.Street})  
                    @Html.ValidationMessageFor(x => x.Client.Street)
                </div>
                
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Client.StreetNumber)
                    @Html.TextBoxFor(x => x.Client.StreetNumber, new { @class = "form-control", @placeholder = "Enter user's street number", @value = @Model.Client.StreetNumber})  
                    @Html.ValidationMessageFor(x => x.Client.StreetNumber)
                    </div>
                </div>

            
            @if (User.IsInRole(RolesDict.Administrator))
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.Client.RoleIds)

                    <select data-dropdown-css-class="select2-blue" class="form-control select2 select2-RoleIds" 
                    multiple="multiple" data-placeholder="Wybierz role" style="width:100%;" asp-for="@Model.Client.RoleIds" 
                    asp-items="@Model.AvailableRoles.Select(x => new SelectListItem(x.Name, x.Id))">

                    </select>

                    @Html.ValidationMessageFor(x => x.Client.RoleIds)
                </div>
            }

        </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-primary btn-lg mr-3">
            <i class="fas fa-solid fa-circle-check"></i>Zapisz
            </button>
            <a href="/AdminPanel/Clients" class="btn btn-secondary btn-lg" role="button">
            <i class="fas fa-solid fa-cancel"></i>Anuluj
            </a>
        </div>

    }

</div>

@section Scripts{

    <partial name="Scripts/_ValidationScriptsPartial" />
    <partial name="Scripts/_SelectScripts" />
    <script src="~/lib/inputmask/jquery.inputmask.bundle.min.js"></script>

    <script>
        $(document).ready(function() {

            $('.select2-RoleIds').select2();

            if ('@Model.Client.IsBusinessAccount.ToString().ToUpper()' == 'TRUE'){
                $("#divNipNumber").show();
                $("#divCompanyName").show();
                $("#divLogo").show();
            }

            $("#Client_ZipCode").inputmask("99-999", {"clearIncomplete": true, showMaskOnHover: false });

        });

        $('#Client_IsBusinessAccount').click(function() {
            if($('#Client_IsBusinessAccount').is(':checked')) {
                $("#divNipNumber").show();
                $("#divCompanyName").show();
                $("#divLogo").show();
            }
            else{
                $("#divNipNumber").hide();
                $("#divCompanyName").hide();
                $("#divLogo").hide();
            }
        });
    </script>
}